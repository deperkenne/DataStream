 name: voting_app

 on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main
    workflow_dispatch:

 jobs:
    build:
      runs-on: ubuntu-24.04
      steps:
        - uses: actions/checkout@v2
        - name: first-bash
          run: bash ./test.sh

        - name : Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.10'
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip  # update pip 
            pip install -r requirements.txt   # Install dependencies belong  requirements.txt
        - name: create repo and downloads files in this repo
          run: |
             mkdir voting_app_repo
             cp repo_voting/*.py voting_app_repo
             cd voting_app_repo
             ls -al
        - name: Upload files as artifact
          uses: actions/upload-artifact@v4
          with:
           name: my-artifact
           path: voting_app_repo
           retention-days: 3  

    validation_code:
      if: github.rf == 'rfs/heads/dev'
      runs-on: ubuntu-24.04
      needs: build # this code depends on job build
      steps:
        - name: Check out code
          uses: actions/checkout@v2
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install flake8
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
           python-version: '3.11'

        - name: Run Flake8 linter
          run: |
            flake8 . --count --max-line-length=88 --statistics

        - name: Show success message
          if: success()
          run: echo "Code validation passed successfully! "

        - name: Fail workflow
          if: failure()
          run: echo "Code validation failed!"


    test:
      if: github.rf == 'rfs/heads/dev'
      runs-on: ubuntu-24.04
      needs: build # this code depends on job build
      steps:
        - name: Check out code
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
           python-version: '3.10'
               
        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: my-artifact         
            path: voting_app

        - name: List voting_app repo
          run: | 
              if [ -d "voting_app" ]; then
               echo "Artifact downloaded successfully."
               ls -al  voting_app
               else
               echo "Download failed. Directory does not exist."
               exit 1
              fi

        - name: install dependencies
          run: |
            python -m pip install --upgrade pip  # update pip 
            pip install -r requirements.txt   
        - name : run test with pytest
          run: |
             cd  voting_app
             ls -al
             pytest test.py
     

    sshconnection:
           runs-on: ubuntu-24.04
           steps:
               - name: Check out code
                 uses: actions/checkout@v2
               - name: Setup SSH
                 run: |
                   mkdir -p ~/.ssh
                   echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
                   chmod 600 ~/.ssh/id_rsa
                   ssh-keyscan -H -p 22 ${{ secrets.HOSTNAME }} >> ~/.ssh/known_hosts 
                   chmod 600 ~/.ssh/known_hosts
               - name: Execute Remote Command
                 run: ssh -p 22 ${{ secrets.AZURE_CLOUD_USERNAME }}}@${{ secrets.AZURE_CLOUD_HOSTNAME }} "echo 'Connected successfully!'"
                    
  

           


               
              
              

             
                           
           
           
         
            
     
    
 
           
              

            

        
