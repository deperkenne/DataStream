 name: voting_app

 on:
    push:
      branches:
        - main
        - 'feature/*'
    pull_request:
      branches:
        - main
    workflow_dispatch:

 jobs:
    unit-testing:
      strategy:
        matrix:
          os:[ubuntu-24.04,ubuntu-latest,macos-latest,windows-latest] python-version: ["3.9","3.10", "3.11", "3.13"]
          exclude:
            - os: macos-latest
              python-version: "3.9"
            - os: windows-latest
              python-version: "3.9"
      runs-on: ${{matrix.os}}
      steps:
        - name: checkout Repository
        - uses: actions/checkout@v4

        - name : Set up Python version ${{matrix.python-version}}
          uses: actions/setup-python@v2
          with:
            python-version: ${{matrix.python-version}}
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip  # update pip 
            pip install -r requirements.txt   # Install dependencies belong  requirements.txt
        - name: run unit testing
          run: |
               pytest repo_voting/test.py
              

    sshconnection:
           if: success()
           runs-on: ubuntu-24.04
           steps:
               - name: Check out code
                 uses: actions/checkout@v2
               - name: install ssh
                 run: |
                   
                   mkdir -p /home/runner/.ssh
                   echo "${{ secrets.SSH_PRIVATE_KEY1 }}" | base64 --decode > /home/runner/.ssh/id_rsa
                   chmod 600  /home/runner/.ssh/id_rsa
                   eval "$(ssh-agent -s)"
                   ssh-keyscan 4.182.249.48 >> ~/.ssh/known_hosts
               - name: Execute Remote Command
                 run: ssh  kenne@4.182.249.48 "echo 'Connected successfully!'"

























