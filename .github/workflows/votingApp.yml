 name: voting_app

 on:
    push:
      branches:
        - main
        - 'feature/*'
    pull_request:
      branches:
        - main
    workflow_dispatch:

 jobs:
    unit-testing:
      runs-on: ${{matrix.os}}
      strategy:
        matrix:
          os:[ubuntu-24.04,ubuntu-latest,macos-latest,windows-latest] python-version: ["3.9","3.10" "3.11", "3.13"]
          exclude:
            - os: macos-latest
              python-version: "3.11"
            - os: windows-latest
              python-version: "3.9"
      steps:
        - name: checkout Repository
        - uses: actions/checkout@v4

        - name : Set up Python version ${{matrix.python-version}}
          uses: actions/setup-python@v2
          with:
            python-version: ${{matrix.python-version}}
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip  # update pip 
            pip install -r requirements.txt   # Install dependencies belong  requirements.txt
        - name: run unit test
          run: |
               pytest repo_voting/test.py
            
     

    validation_code:
      if: fail()
      runs-on: ubuntu-24.04
      needs: build # this code depends on job build
      steps:
        - name: Check out code
          uses: actions/checkout@v2
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install flake8
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
           python-version: '3.11'

        - name: Run Flake8 linter
          run: |
            flake8 . --count --max-line-length=88 --statistics

        - name: Show success message
          if: success()
          run: echo "Code validation passed successfully! "

        - name: Fail workflow
          if: failure()
          run: echo "Code validation failed!"


    test:
      runs-on: ubuntu-24.04
      needs: build # this code depends on job build
      steps:
        - name: Check out code
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
           python-version: '3.10'

        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: my-artifact
            path: voting_app

        - name: List voting_app repo
          run: | 
              if [ -d "voting_app" ]; then
               echo "Artifact downloaded successfully."
               ls -al  voting_app
               else
               echo "Download failed. Directory does not exist."
               exit 1
              fi

        - name: install dependencies
          run: |
            python -m pip install --upgrade pip  # update pip 
            pip install -r requirements.txt
        - name : run test with pytest
          run: |
             cd  voting_app
             ls -al
             pytest test.py
     

    sshconnection:
           if: success()
           runs-on: ubuntu-24.04
           steps:
               - name: Check out code
                 uses: actions/checkout@v2
               - name: install ssh
                 run: |
                   
                   mkdir -p /home/runner/.ssh
                   echo "${{ secrets.SSH_PRIVATE_KEY1 }}" | base64 --decode > /home/runner/.ssh/id_rsa
                   chmod 600  /home/runner/.ssh/id_rsa
                   eval "$(ssh-agent -s)"
                   ssh-keyscan 4.182.249.48 >> ~/.ssh/known_hosts
               - name: Execute Remote Command
                 run: ssh  kenne@4.182.249.48 "echo 'Connected successfully!'"

























